{"ast":null,"code":"const got = require('got');\nconst YAML = require('yamljs');\nconst oPick = require('object.pick');\nconst backupList = require('./data/icons.json');\nconst getIcons = () => got('fontawesome.com/v4.7.0/icons.yml').then(response => YAML.parse(response.body.icons)).catch(() => backupList.icons);\nconst printVersion = data => `${data[data.length - 1].created}.x`;\nconst cleanUpObjectsArray = (data, fields) => data.map(icon => oPick(icon, fields));\nconst getCategoriesObject = (data, fields = []) => {\n  const categories = {};\n  data.forEach(icon => {\n    icon.categories.forEach(category => {\n      if (!{}.hasOwnProperty.call(categories, category)) {\n        categories[category] = [];\n      }\n      categories[category].push(oPick(icon, fields));\n    });\n  });\n  return categories;\n};\nconst getCategoriesArray = (data, fields) => {\n  const categoriesObject = getCategoriesObject(data, fields);\n  const categoriesArray = [];\n  Object.keys(categoriesObject).forEach(key => {\n    categoriesArray.push({\n      name: key,\n      icons: categoriesObject[key]\n    });\n  });\n  return categoriesArray;\n};\nconst getIconsByCategoryName = (data, name) => getCategoriesObject(data)[name] || [];\nmodule.exports.getList = getIcons;\nmodule.exports.version = () => new Promise(resolve => {\n  getIcons().then(data => resolve(printVersion(data))).catch(() => resolve(printVersion(backupList.icons)));\n});\nmodule.exports.getCategories = fields => new Promise(resolve => {\n  getIcons().then(data => resolve(getCategoriesArray(data, fields))).catch(() => resolve(getCategoriesArray(backupList.icons, fields)));\n});\nmodule.exports.getIconsByCategory = categoryName => new Promise(resolve => {\n  if (!categoryName) {\n    return resolve([]);\n  }\n  return getIcons().then(data => resolve(getIconsByCategoryName(data, categoryName))).catch(() => resolve(getIconsByCategoryName(backupList.icons, categoryName)));\n});\nmodule.exports.getListByKeys = fields => new Promise(resolve => {\n  getIcons().then(data => resolve(cleanUpObjectsArray(data, fields))).catch(() => resolve(cleanUpObjectsArray(backupList.icons, fields)));\n});","map":{"version":3,"names":["got","require","YAML","oPick","backupList","getIcons","then","response","parse","body","icons","catch","printVersion","data","length","created","cleanUpObjectsArray","fields","map","icon","getCategoriesObject","categories","forEach","category","hasOwnProperty","call","push","getCategoriesArray","categoriesObject","categoriesArray","Object","keys","key","name","getIconsByCategoryName","module","exports","getList","version","Promise","resolve","getCategories","getIconsByCategory","categoryName","getListByKeys"],"sources":["D:/my code/my-app/node_modules/font-awesome-icons/index.js"],"sourcesContent":["const got = require('got');\nconst YAML = require('yamljs');\nconst oPick = require('object.pick');\nconst backupList = require('./data/icons.json');\n\nconst getIcons = () => got('fontawesome.com/v4.7.0/icons.yml')\n    .then(response => YAML.parse(response.body.icons))\n    .catch(() => backupList.icons);\n\nconst printVersion = data => `${data[data.length - 1].created}.x`;\n\nconst cleanUpObjectsArray = (data, fields) => data.map(icon => oPick(icon, fields));\n\nconst getCategoriesObject = (data, fields = []) => {\n    const categories = {};\n    data.forEach((icon) => {\n        icon.categories.forEach((category) => {\n            if (!{}.hasOwnProperty.call(categories, category)) {\n                categories[category] = [];\n            }\n            categories[category].push(oPick(icon, fields));\n        });\n    });\n    return categories;\n};\n\nconst getCategoriesArray = (data, fields) => {\n    const categoriesObject = getCategoriesObject(data, fields);\n    const categoriesArray = [];\n    Object.keys(categoriesObject).forEach((key) => {\n        categoriesArray.push({\n            name: key,\n            icons: categoriesObject[key],\n        });\n    });\n    return categoriesArray;\n};\n\nconst getIconsByCategoryName = (data, name) =>\n    getCategoriesObject(data)[name] || [];\n\nmodule.exports.getList = getIcons;\n\nmodule.exports.version = () =>\n    new Promise((resolve) => {\n        getIcons()\n            .then(data => resolve(printVersion(data)))\n            .catch(() => resolve(printVersion(backupList.icons)));\n    });\n\nmodule.exports.getCategories = fields =>\n    new Promise((resolve) => {\n        getIcons()\n            .then(data => resolve(getCategoriesArray(data, fields)))\n            .catch(() => resolve(getCategoriesArray(backupList.icons, fields)));\n    });\n\nmodule.exports.getIconsByCategory = categoryName =>\n    new Promise((resolve) => {\n        if (!categoryName) {\n            return resolve([]);\n        }\n        return getIcons()\n            .then(data => resolve(getIconsByCategoryName(data, categoryName)))\n            .catch(() => resolve(getIconsByCategoryName(backupList.icons, categoryName)));\n    });\n\nmodule.exports.getListByKeys = fields =>\n    new Promise((resolve) => {\n        getIcons()\n            .then(data => resolve(cleanUpObjectsArray(data, fields)))\n            .catch(() => resolve(cleanUpObjectsArray(backupList.icons, fields)));\n    });\n"],"mappings":"AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,KAAK,CAAC;AAC1B,MAAMC,IAAI,GAAGD,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAME,KAAK,GAAGF,OAAO,CAAC,aAAa,CAAC;AACpC,MAAMG,UAAU,GAAGH,OAAO,CAAC,mBAAmB,CAAC;AAE/C,MAAMI,QAAQ,GAAGA,CAAA,KAAML,GAAG,CAAC,kCAAkC,CAAC,CACzDM,IAAI,CAACC,QAAQ,IAAIL,IAAI,CAACM,KAAK,CAACD,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,CACjDC,KAAK,CAAC,MAAMP,UAAU,CAACM,KAAK,CAAC;AAElC,MAAME,YAAY,GAAGC,IAAI,IAAK,GAAEA,IAAI,CAACA,IAAI,CAACC,MAAM,GAAG,CAAC,CAAC,CAACC,OAAQ,IAAG;AAEjE,MAAMC,mBAAmB,GAAGA,CAACH,IAAI,EAAEI,MAAM,KAAKJ,IAAI,CAACK,GAAG,CAACC,IAAI,IAAIhB,KAAK,CAACgB,IAAI,EAAEF,MAAM,CAAC,CAAC;AAEnF,MAAMG,mBAAmB,GAAGA,CAACP,IAAI,EAAEI,MAAM,GAAG,EAAE,KAAK;EAC/C,MAAMI,UAAU,GAAG,CAAC,CAAC;EACrBR,IAAI,CAACS,OAAO,CAAEH,IAAI,IAAK;IACnBA,IAAI,CAACE,UAAU,CAACC,OAAO,CAAEC,QAAQ,IAAK;MAClC,IAAI,CAAC,CAAC,CAAC,CAACC,cAAc,CAACC,IAAI,CAACJ,UAAU,EAAEE,QAAQ,CAAC,EAAE;QAC/CF,UAAU,CAACE,QAAQ,CAAC,GAAG,EAAE;MAC7B;MACAF,UAAU,CAACE,QAAQ,CAAC,CAACG,IAAI,CAACvB,KAAK,CAACgB,IAAI,EAAEF,MAAM,CAAC,CAAC;IAClD,CAAC,CAAC;EACN,CAAC,CAAC;EACF,OAAOI,UAAU;AACrB,CAAC;AAED,MAAMM,kBAAkB,GAAGA,CAACd,IAAI,EAAEI,MAAM,KAAK;EACzC,MAAMW,gBAAgB,GAAGR,mBAAmB,CAACP,IAAI,EAAEI,MAAM,CAAC;EAC1D,MAAMY,eAAe,GAAG,EAAE;EAC1BC,MAAM,CAACC,IAAI,CAACH,gBAAgB,CAAC,CAACN,OAAO,CAAEU,GAAG,IAAK;IAC3CH,eAAe,CAACH,IAAI,CAAC;MACjBO,IAAI,EAAED,GAAG;MACTtB,KAAK,EAAEkB,gBAAgB,CAACI,GAAG;IAC/B,CAAC,CAAC;EACN,CAAC,CAAC;EACF,OAAOH,eAAe;AAC1B,CAAC;AAED,MAAMK,sBAAsB,GAAGA,CAACrB,IAAI,EAAEoB,IAAI,KACtCb,mBAAmB,CAACP,IAAI,CAAC,CAACoB,IAAI,CAAC,IAAI,EAAE;AAEzCE,MAAM,CAACC,OAAO,CAACC,OAAO,GAAGhC,QAAQ;AAEjC8B,MAAM,CAACC,OAAO,CAACE,OAAO,GAAG,MACrB,IAAIC,OAAO,CAAEC,OAAO,IAAK;EACrBnC,QAAQ,CAAC,CAAC,CACLC,IAAI,CAACO,IAAI,IAAI2B,OAAO,CAAC5B,YAAY,CAACC,IAAI,CAAC,CAAC,CAAC,CACzCF,KAAK,CAAC,MAAM6B,OAAO,CAAC5B,YAAY,CAACR,UAAU,CAACM,KAAK,CAAC,CAAC,CAAC;AAC7D,CAAC,CAAC;AAENyB,MAAM,CAACC,OAAO,CAACK,aAAa,GAAGxB,MAAM,IACjC,IAAIsB,OAAO,CAAEC,OAAO,IAAK;EACrBnC,QAAQ,CAAC,CAAC,CACLC,IAAI,CAACO,IAAI,IAAI2B,OAAO,CAACb,kBAAkB,CAACd,IAAI,EAAEI,MAAM,CAAC,CAAC,CAAC,CACvDN,KAAK,CAAC,MAAM6B,OAAO,CAACb,kBAAkB,CAACvB,UAAU,CAACM,KAAK,EAAEO,MAAM,CAAC,CAAC,CAAC;AAC3E,CAAC,CAAC;AAENkB,MAAM,CAACC,OAAO,CAACM,kBAAkB,GAAGC,YAAY,IAC5C,IAAIJ,OAAO,CAAEC,OAAO,IAAK;EACrB,IAAI,CAACG,YAAY,EAAE;IACf,OAAOH,OAAO,CAAC,EAAE,CAAC;EACtB;EACA,OAAOnC,QAAQ,CAAC,CAAC,CACZC,IAAI,CAACO,IAAI,IAAI2B,OAAO,CAACN,sBAAsB,CAACrB,IAAI,EAAE8B,YAAY,CAAC,CAAC,CAAC,CACjEhC,KAAK,CAAC,MAAM6B,OAAO,CAACN,sBAAsB,CAAC9B,UAAU,CAACM,KAAK,EAAEiC,YAAY,CAAC,CAAC,CAAC;AACrF,CAAC,CAAC;AAENR,MAAM,CAACC,OAAO,CAACQ,aAAa,GAAG3B,MAAM,IACjC,IAAIsB,OAAO,CAAEC,OAAO,IAAK;EACrBnC,QAAQ,CAAC,CAAC,CACLC,IAAI,CAACO,IAAI,IAAI2B,OAAO,CAACxB,mBAAmB,CAACH,IAAI,EAAEI,MAAM,CAAC,CAAC,CAAC,CACxDN,KAAK,CAAC,MAAM6B,OAAO,CAACxB,mBAAmB,CAACZ,UAAU,CAACM,KAAK,EAAEO,MAAM,CAAC,CAAC,CAAC;AAC5E,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}