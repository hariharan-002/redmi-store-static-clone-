{"ast":null,"code":"// Generated by CoffeeScript 1.12.4\nvar Pattern;\nPattern = function () {\n  Pattern.prototype.regex = null;\n  Pattern.prototype.rawRegex = null;\n  Pattern.prototype.cleanedRegex = null;\n  Pattern.prototype.mapping = null;\n  function Pattern(rawRegex, modifiers) {\n    var _char, capturingBracketNumber, cleanedRegex, i, len, mapping, name, part, subChar;\n    if (modifiers == null) {\n      modifiers = '';\n    }\n    cleanedRegex = '';\n    len = rawRegex.length;\n    mapping = null;\n    capturingBracketNumber = 0;\n    i = 0;\n    while (i < len) {\n      _char = rawRegex.charAt(i);\n      if (_char === '\\\\') {\n        cleanedRegex += rawRegex.slice(i, +(i + 1) + 1 || 9e9);\n        i++;\n      } else if (_char === '(') {\n        if (i < len - 2) {\n          part = rawRegex.slice(i, +(i + 2) + 1 || 9e9);\n          if (part === '(?:') {\n            i += 2;\n            cleanedRegex += part;\n          } else if (part === '(?<') {\n            capturingBracketNumber++;\n            i += 2;\n            name = '';\n            while (i + 1 < len) {\n              subChar = rawRegex.charAt(i + 1);\n              if (subChar === '>') {\n                cleanedRegex += '(';\n                i++;\n                if (name.length > 0) {\n                  if (mapping == null) {\n                    mapping = {};\n                  }\n                  mapping[name] = capturingBracketNumber;\n                }\n                break;\n              } else {\n                name += subChar;\n              }\n              i++;\n            }\n          } else {\n            cleanedRegex += _char;\n            capturingBracketNumber++;\n          }\n        } else {\n          cleanedRegex += _char;\n        }\n      } else {\n        cleanedRegex += _char;\n      }\n      i++;\n    }\n    this.rawRegex = rawRegex;\n    this.cleanedRegex = cleanedRegex;\n    this.regex = new RegExp(this.cleanedRegex, 'g' + modifiers.replace('g', ''));\n    this.mapping = mapping;\n  }\n  Pattern.prototype.exec = function (str) {\n    var index, matches, name, ref;\n    this.regex.lastIndex = 0;\n    matches = this.regex.exec(str);\n    if (matches == null) {\n      return null;\n    }\n    if (this.mapping != null) {\n      ref = this.mapping;\n      for (name in ref) {\n        index = ref[name];\n        matches[name] = matches[index];\n      }\n    }\n    return matches;\n  };\n  Pattern.prototype.test = function (str) {\n    this.regex.lastIndex = 0;\n    return this.regex.test(str);\n  };\n  Pattern.prototype.replace = function (str, replacement) {\n    this.regex.lastIndex = 0;\n    return str.replace(this.regex, replacement);\n  };\n  Pattern.prototype.replaceAll = function (str, replacement, limit) {\n    var count;\n    if (limit == null) {\n      limit = 0;\n    }\n    this.regex.lastIndex = 0;\n    count = 0;\n    while (this.regex.test(str) && (limit === 0 || count < limit)) {\n      this.regex.lastIndex = 0;\n      str = str.replace(this.regex, replacement);\n      count++;\n    }\n    return [str, count];\n  };\n  return Pattern;\n}();\nmodule.exports = Pattern;","map":{"version":3,"names":["Pattern","prototype","regex","rawRegex","cleanedRegex","mapping","modifiers","_char","capturingBracketNumber","i","len","name","part","subChar","length","charAt","slice","RegExp","replace","exec","str","index","matches","ref","lastIndex","test","replacement","replaceAll","limit","count","module","exports"],"sources":["D:/my code/my-app/node_modules/yamljs/lib/Pattern.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.4\nvar Pattern;\n\nPattern = (function() {\n  Pattern.prototype.regex = null;\n\n  Pattern.prototype.rawRegex = null;\n\n  Pattern.prototype.cleanedRegex = null;\n\n  Pattern.prototype.mapping = null;\n\n  function Pattern(rawRegex, modifiers) {\n    var _char, capturingBracketNumber, cleanedRegex, i, len, mapping, name, part, subChar;\n    if (modifiers == null) {\n      modifiers = '';\n    }\n    cleanedRegex = '';\n    len = rawRegex.length;\n    mapping = null;\n    capturingBracketNumber = 0;\n    i = 0;\n    while (i < len) {\n      _char = rawRegex.charAt(i);\n      if (_char === '\\\\') {\n        cleanedRegex += rawRegex.slice(i, +(i + 1) + 1 || 9e9);\n        i++;\n      } else if (_char === '(') {\n        if (i < len - 2) {\n          part = rawRegex.slice(i, +(i + 2) + 1 || 9e9);\n          if (part === '(?:') {\n            i += 2;\n            cleanedRegex += part;\n          } else if (part === '(?<') {\n            capturingBracketNumber++;\n            i += 2;\n            name = '';\n            while (i + 1 < len) {\n              subChar = rawRegex.charAt(i + 1);\n              if (subChar === '>') {\n                cleanedRegex += '(';\n                i++;\n                if (name.length > 0) {\n                  if (mapping == null) {\n                    mapping = {};\n                  }\n                  mapping[name] = capturingBracketNumber;\n                }\n                break;\n              } else {\n                name += subChar;\n              }\n              i++;\n            }\n          } else {\n            cleanedRegex += _char;\n            capturingBracketNumber++;\n          }\n        } else {\n          cleanedRegex += _char;\n        }\n      } else {\n        cleanedRegex += _char;\n      }\n      i++;\n    }\n    this.rawRegex = rawRegex;\n    this.cleanedRegex = cleanedRegex;\n    this.regex = new RegExp(this.cleanedRegex, 'g' + modifiers.replace('g', ''));\n    this.mapping = mapping;\n  }\n\n  Pattern.prototype.exec = function(str) {\n    var index, matches, name, ref;\n    this.regex.lastIndex = 0;\n    matches = this.regex.exec(str);\n    if (matches == null) {\n      return null;\n    }\n    if (this.mapping != null) {\n      ref = this.mapping;\n      for (name in ref) {\n        index = ref[name];\n        matches[name] = matches[index];\n      }\n    }\n    return matches;\n  };\n\n  Pattern.prototype.test = function(str) {\n    this.regex.lastIndex = 0;\n    return this.regex.test(str);\n  };\n\n  Pattern.prototype.replace = function(str, replacement) {\n    this.regex.lastIndex = 0;\n    return str.replace(this.regex, replacement);\n  };\n\n  Pattern.prototype.replaceAll = function(str, replacement, limit) {\n    var count;\n    if (limit == null) {\n      limit = 0;\n    }\n    this.regex.lastIndex = 0;\n    count = 0;\n    while (this.regex.test(str) && (limit === 0 || count < limit)) {\n      this.regex.lastIndex = 0;\n      str = str.replace(this.regex, replacement);\n      count++;\n    }\n    return [str, count];\n  };\n\n  return Pattern;\n\n})();\n\nmodule.exports = Pattern;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}