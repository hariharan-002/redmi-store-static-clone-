{"ast":null,"code":"// Generated by CoffeeScript 1.12.4\nvar Escaper, Pattern;\nPattern = require('./Pattern');\nEscaper = function () {\n  var ch;\n  function Escaper() {}\n  Escaper.LIST_ESCAPEES = ['\\\\', '\\\\\\\\', '\\\\\"', '\"', \"\\x00\", \"\\x01\", \"\\x02\", \"\\x03\", \"\\x04\", \"\\x05\", \"\\x06\", \"\\x07\", \"\\x08\", \"\\x09\", \"\\x0a\", \"\\x0b\", \"\\x0c\", \"\\x0d\", \"\\x0e\", \"\\x0f\", \"\\x10\", \"\\x11\", \"\\x12\", \"\\x13\", \"\\x14\", \"\\x15\", \"\\x16\", \"\\x17\", \"\\x18\", \"\\x19\", \"\\x1a\", \"\\x1b\", \"\\x1c\", \"\\x1d\", \"\\x1e\", \"\\x1f\", (ch = String.fromCharCode)(0x0085), ch(0x00A0), ch(0x2028), ch(0x2029)];\n  Escaper.LIST_ESCAPED = ['\\\\\\\\', '\\\\\"', '\\\\\"', '\\\\\"', \"\\\\0\", \"\\\\x01\", \"\\\\x02\", \"\\\\x03\", \"\\\\x04\", \"\\\\x05\", \"\\\\x06\", \"\\\\a\", \"\\\\b\", \"\\\\t\", \"\\\\n\", \"\\\\v\", \"\\\\f\", \"\\\\r\", \"\\\\x0e\", \"\\\\x0f\", \"\\\\x10\", \"\\\\x11\", \"\\\\x12\", \"\\\\x13\", \"\\\\x14\", \"\\\\x15\", \"\\\\x16\", \"\\\\x17\", \"\\\\x18\", \"\\\\x19\", \"\\\\x1a\", \"\\\\e\", \"\\\\x1c\", \"\\\\x1d\", \"\\\\x1e\", \"\\\\x1f\", \"\\\\N\", \"\\\\_\", \"\\\\L\", \"\\\\P\"];\n  Escaper.MAPPING_ESCAPEES_TO_ESCAPED = function () {\n    var i, j, mapping, ref;\n    mapping = {};\n    for (i = j = 0, ref = Escaper.LIST_ESCAPEES.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      mapping[Escaper.LIST_ESCAPEES[i]] = Escaper.LIST_ESCAPED[i];\n    }\n    return mapping;\n  }();\n  Escaper.PATTERN_CHARACTERS_TO_ESCAPE = new Pattern('[\\\\x00-\\\\x1f]|\\xc2\\x85|\\xc2\\xa0|\\xe2\\x80\\xa8|\\xe2\\x80\\xa9');\n  Escaper.PATTERN_MAPPING_ESCAPEES = new Pattern(Escaper.LIST_ESCAPEES.join('|').split('\\\\').join('\\\\\\\\'));\n  Escaper.PATTERN_SINGLE_QUOTING = new Pattern('[\\\\s\\'\":{}[\\\\],&*#?]|^[-?|<>=!%@`]');\n  Escaper.requiresDoubleQuoting = function (value) {\n    return this.PATTERN_CHARACTERS_TO_ESCAPE.test(value);\n  };\n  Escaper.escapeWithDoubleQuotes = function (value) {\n    var result;\n    result = this.PATTERN_MAPPING_ESCAPEES.replace(value, function (_this) {\n      return function (str) {\n        return _this.MAPPING_ESCAPEES_TO_ESCAPED[str];\n      };\n    }(this));\n    return '\"' + result + '\"';\n  };\n  Escaper.requiresSingleQuoting = function (value) {\n    return this.PATTERN_SINGLE_QUOTING.test(value);\n  };\n  Escaper.escapeWithSingleQuotes = function (value) {\n    return \"'\" + value.replace(/'/g, \"''\") + \"'\";\n  };\n  return Escaper;\n}();\nmodule.exports = Escaper;","map":{"version":3,"names":["Escaper","Pattern","require","ch","LIST_ESCAPEES","String","fromCharCode","LIST_ESCAPED","MAPPING_ESCAPEES_TO_ESCAPED","i","j","mapping","ref","length","PATTERN_CHARACTERS_TO_ESCAPE","PATTERN_MAPPING_ESCAPEES","join","split","PATTERN_SINGLE_QUOTING","requiresDoubleQuoting","value","test","escapeWithDoubleQuotes","result","replace","_this","str","requiresSingleQuoting","escapeWithSingleQuotes","module","exports"],"sources":["D:/my code/my-app/node_modules/yamljs/lib/Escaper.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.4\nvar Escaper, Pattern;\n\nPattern = require('./Pattern');\n\nEscaper = (function() {\n  var ch;\n\n  function Escaper() {}\n\n  Escaper.LIST_ESCAPEES = ['\\\\', '\\\\\\\\', '\\\\\"', '\"', \"\\x00\", \"\\x01\", \"\\x02\", \"\\x03\", \"\\x04\", \"\\x05\", \"\\x06\", \"\\x07\", \"\\x08\", \"\\x09\", \"\\x0a\", \"\\x0b\", \"\\x0c\", \"\\x0d\", \"\\x0e\", \"\\x0f\", \"\\x10\", \"\\x11\", \"\\x12\", \"\\x13\", \"\\x14\", \"\\x15\", \"\\x16\", \"\\x17\", \"\\x18\", \"\\x19\", \"\\x1a\", \"\\x1b\", \"\\x1c\", \"\\x1d\", \"\\x1e\", \"\\x1f\", (ch = String.fromCharCode)(0x0085), ch(0x00A0), ch(0x2028), ch(0x2029)];\n\n  Escaper.LIST_ESCAPED = ['\\\\\\\\', '\\\\\"', '\\\\\"', '\\\\\"', \"\\\\0\", \"\\\\x01\", \"\\\\x02\", \"\\\\x03\", \"\\\\x04\", \"\\\\x05\", \"\\\\x06\", \"\\\\a\", \"\\\\b\", \"\\\\t\", \"\\\\n\", \"\\\\v\", \"\\\\f\", \"\\\\r\", \"\\\\x0e\", \"\\\\x0f\", \"\\\\x10\", \"\\\\x11\", \"\\\\x12\", \"\\\\x13\", \"\\\\x14\", \"\\\\x15\", \"\\\\x16\", \"\\\\x17\", \"\\\\x18\", \"\\\\x19\", \"\\\\x1a\", \"\\\\e\", \"\\\\x1c\", \"\\\\x1d\", \"\\\\x1e\", \"\\\\x1f\", \"\\\\N\", \"\\\\_\", \"\\\\L\", \"\\\\P\"];\n\n  Escaper.MAPPING_ESCAPEES_TO_ESCAPED = (function() {\n    var i, j, mapping, ref;\n    mapping = {};\n    for (i = j = 0, ref = Escaper.LIST_ESCAPEES.length; 0 <= ref ? j < ref : j > ref; i = 0 <= ref ? ++j : --j) {\n      mapping[Escaper.LIST_ESCAPEES[i]] = Escaper.LIST_ESCAPED[i];\n    }\n    return mapping;\n  })();\n\n  Escaper.PATTERN_CHARACTERS_TO_ESCAPE = new Pattern('[\\\\x00-\\\\x1f]|\\xc2\\x85|\\xc2\\xa0|\\xe2\\x80\\xa8|\\xe2\\x80\\xa9');\n\n  Escaper.PATTERN_MAPPING_ESCAPEES = new Pattern(Escaper.LIST_ESCAPEES.join('|').split('\\\\').join('\\\\\\\\'));\n\n  Escaper.PATTERN_SINGLE_QUOTING = new Pattern('[\\\\s\\'\":{}[\\\\],&*#?]|^[-?|<>=!%@`]');\n\n  Escaper.requiresDoubleQuoting = function(value) {\n    return this.PATTERN_CHARACTERS_TO_ESCAPE.test(value);\n  };\n\n  Escaper.escapeWithDoubleQuotes = function(value) {\n    var result;\n    result = this.PATTERN_MAPPING_ESCAPEES.replace(value, (function(_this) {\n      return function(str) {\n        return _this.MAPPING_ESCAPEES_TO_ESCAPED[str];\n      };\n    })(this));\n    return '\"' + result + '\"';\n  };\n\n  Escaper.requiresSingleQuoting = function(value) {\n    return this.PATTERN_SINGLE_QUOTING.test(value);\n  };\n\n  Escaper.escapeWithSingleQuotes = function(value) {\n    return \"'\" + value.replace(/'/g, \"''\") + \"'\";\n  };\n\n  return Escaper;\n\n})();\n\nmodule.exports = Escaper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}