{"ast":null,"code":"/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport { defaultTemplateProcessor } from './lib/default-template-processor.js';\nimport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { DefaultTemplateProcessor, defaultTemplateProcessor } from './lib/default-template-processor.js';\nexport { directive, isDirective } from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport { removeNodes, reparentNodes } from './lib/dom.js';\nexport { noChange, nothing } from './lib/part.js';\nexport { AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart } from './lib/parts.js';\nexport { parts, render } from './lib/render.js';\nexport { templateCaches, templateFactory } from './lib/template-factory.js';\nexport { TemplateInstance } from './lib/template-instance.js';\nexport { SVGTemplateResult, TemplateResult } from './lib/template-result.js';\nexport { createMarker, isTemplatePartActive, Template } from './lib/template.js';\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.4.1');\n}\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings, ...values) => new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings, ...values) => new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);","map":{"version":3,"names":["defaultTemplateProcessor","SVGTemplateResult","TemplateResult","DefaultTemplateProcessor","directive","isDirective","removeNodes","reparentNodes","noChange","nothing","AttributeCommitter","AttributePart","BooleanAttributePart","EventPart","isIterable","isPrimitive","NodePart","PropertyCommitter","PropertyPart","parts","render","templateCaches","templateFactory","TemplateInstance","createMarker","isTemplatePartActive","Template","window","push","html","strings","values","svg"],"sources":["D:\\my code\\my-app\\node_modules\\lit-html\\src\\lit-html.ts"],"sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\n/**\n *\n * Main lit-html module.\n *\n * Main exports:\n *\n * -  [[html]]\n * -  [[svg]]\n * -  [[render]]\n *\n * @packageDocumentation\n */\n\n/**\n * Do not remove this comment; it keeps typedoc from misplacing the module\n * docs.\n */\nimport {defaultTemplateProcessor} from './lib/default-template-processor.js';\nimport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\n\nexport {DefaultTemplateProcessor, defaultTemplateProcessor} from './lib/default-template-processor.js';\nexport {directive, DirectiveFn, isDirective} from './lib/directive.js';\n// TODO(justinfagnani): remove line when we get NodePart moving methods\nexport {removeNodes, reparentNodes} from './lib/dom.js';\nexport {noChange, nothing, Part} from './lib/part.js';\nexport {AttributeCommitter, AttributePart, BooleanAttributePart, EventPart, isIterable, isPrimitive, NodePart, PropertyCommitter, PropertyPart} from './lib/parts.js';\nexport {RenderOptions} from './lib/render-options.js';\nexport {parts, render} from './lib/render.js';\nexport {templateCaches, templateFactory} from './lib/template-factory.js';\nexport {TemplateInstance} from './lib/template-instance.js';\nexport {TemplateProcessor} from './lib/template-processor.js';\nexport {SVGTemplateResult, TemplateResult} from './lib/template-result.js';\nexport {createMarker, isTemplatePartActive, Template} from './lib/template.js';\n\ndeclare global {\n  interface Window {\n    litHtmlVersions: string[];\n  }\n}\n\n// IMPORTANT: do not change the property name or the assignment expression.\n// This line will be used in regexes to search for lit-html usage.\n// TODO(justinfagnani): inject version number at build time\nif (typeof window !== 'undefined') {\n  (window['litHtmlVersions'] || (window['litHtmlVersions'] = [])).push('1.4.1');\n}\n\n/**\n * Interprets a template literal as an HTML template that can efficiently\n * render to and update a container.\n */\nexport const html = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new TemplateResult(strings, values, 'html', defaultTemplateProcessor);\n\n/**\n * Interprets a template literal as an SVG template that can efficiently\n * render to and update a container.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: unknown[]) =>\n    new SVGTemplateResult(strings, values, 'svg', defaultTemplateProcessor);\n"],"mappings":"AAAA;;;;;;;;;;;;;AAcA;;;;;;;;;;;;AAaA;;;;AAIA,SAAQA,wBAAwB,QAAO,qCAAqC;AAC5E,SAAQC,iBAAiB,EAAEC,cAAc,QAAO,0BAA0B;AAE1E,SAAQC,wBAAwB,EAAEH,wBAAwB,QAAO,qCAAqC;AACtG,SAAQI,SAAS,EAAeC,WAAW,QAAO,oBAAoB;AACtE;AACA,SAAQC,WAAW,EAAEC,aAAa,QAAO,cAAc;AACvD,SAAQC,QAAQ,EAAEC,OAAO,QAAa,eAAe;AACrD,SAAQC,kBAAkB,EAAEC,aAAa,EAAEC,oBAAoB,EAAEC,SAAS,EAAEC,UAAU,EAAEC,WAAW,EAAEC,QAAQ,EAAEC,iBAAiB,EAAEC,YAAY,QAAO,gBAAgB;AAErK,SAAQC,KAAK,EAAEC,MAAM,QAAO,iBAAiB;AAC7C,SAAQC,cAAc,EAAEC,eAAe,QAAO,2BAA2B;AACzE,SAAQC,gBAAgB,QAAO,4BAA4B;AAE3D,SAAQtB,iBAAiB,EAAEC,cAAc,QAAO,0BAA0B;AAC1E,SAAQsB,YAAY,EAAEC,oBAAoB,EAAEC,QAAQ,QAAO,mBAAmB;AAQ9E;AACA;AACA;AACA,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;EACjC,CAACA,MAAM,CAAC,iBAAiB,CAAC,KAAKA,MAAM,CAAC,iBAAiB,CAAC,GAAG,EAAE,CAAC,EAAEC,IAAI,CAAC,OAAO,CAAC;;AAG/E;;;;AAIA,OAAO,MAAMC,IAAI,GAAGA,CAACC,OAA6B,EAAE,GAAGC,MAAiB,KACpE,IAAI7B,cAAc,CAAC4B,OAAO,EAAEC,MAAM,EAAE,MAAM,EAAE/B,wBAAwB,CAAC;AAEzE;;;;AAIA,OAAO,MAAMgC,GAAG,GAAGA,CAACF,OAA6B,EAAE,GAAGC,MAAiB,KACnE,IAAI9B,iBAAiB,CAAC6B,OAAO,EAAEC,MAAM,EAAE,KAAK,EAAE/B,wBAAwB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}