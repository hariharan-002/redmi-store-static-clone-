{"ast":null,"code":"// Generated by CoffeeScript 1.12.4\nvar Dumper, Inline, Utils;\nUtils = require('./Utils');\nInline = require('./Inline');\nDumper = function () {\n  function Dumper() {}\n  Dumper.indentation = 4;\n  Dumper.prototype.dump = function (input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    var i, key, len, output, prefix, value, willBeInlined;\n    if (inline == null) {\n      inline = 0;\n    }\n    if (indent == null) {\n      indent = 0;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    output = '';\n    prefix = indent ? Utils.strRepeat(' ', indent) : '';\n    if (inline <= 0 || typeof input !== 'object' || input instanceof Date || Utils.isEmpty(input)) {\n      output += prefix + Inline.dump(input, exceptionOnInvalidType, objectEncoder);\n    } else {\n      if (input instanceof Array) {\n        for (i = 0, len = input.length; i < len; i++) {\n          value = input[i];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + '-' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, willBeInlined ? 0 : indent + this.indentation, exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      } else {\n        for (key in input) {\n          value = input[key];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + Inline.dump(key, exceptionOnInvalidType, objectEncoder) + ':' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, willBeInlined ? 0 : indent + this.indentation, exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      }\n    }\n    return output;\n  };\n  return Dumper;\n}();\nmodule.exports = Dumper;","map":{"version":3,"names":["Dumper","Inline","Utils","require","indentation","prototype","dump","input","inline","indent","exceptionOnInvalidType","objectEncoder","i","key","len","output","prefix","value","willBeInlined","strRepeat","Date","isEmpty","Array","length","module","exports"],"sources":["D:/my code/my-app/node_modules/yamljs/lib/Dumper.js"],"sourcesContent":["// Generated by CoffeeScript 1.12.4\nvar Dumper, Inline, Utils;\n\nUtils = require('./Utils');\n\nInline = require('./Inline');\n\nDumper = (function() {\n  function Dumper() {}\n\n  Dumper.indentation = 4;\n\n  Dumper.prototype.dump = function(input, inline, indent, exceptionOnInvalidType, objectEncoder) {\n    var i, key, len, output, prefix, value, willBeInlined;\n    if (inline == null) {\n      inline = 0;\n    }\n    if (indent == null) {\n      indent = 0;\n    }\n    if (exceptionOnInvalidType == null) {\n      exceptionOnInvalidType = false;\n    }\n    if (objectEncoder == null) {\n      objectEncoder = null;\n    }\n    output = '';\n    prefix = (indent ? Utils.strRepeat(' ', indent) : '');\n    if (inline <= 0 || typeof input !== 'object' || input instanceof Date || Utils.isEmpty(input)) {\n      output += prefix + Inline.dump(input, exceptionOnInvalidType, objectEncoder);\n    } else {\n      if (input instanceof Array) {\n        for (i = 0, len = input.length; i < len; i++) {\n          value = input[i];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + '-' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, (willBeInlined ? 0 : indent + this.indentation), exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      } else {\n        for (key in input) {\n          value = input[key];\n          willBeInlined = inline - 1 <= 0 || typeof value !== 'object' || Utils.isEmpty(value);\n          output += prefix + Inline.dump(key, exceptionOnInvalidType, objectEncoder) + ':' + (willBeInlined ? ' ' : \"\\n\") + this.dump(value, inline - 1, (willBeInlined ? 0 : indent + this.indentation), exceptionOnInvalidType, objectEncoder) + (willBeInlined ? \"\\n\" : '');\n        }\n      }\n    }\n    return output;\n  };\n\n  return Dumper;\n\n})();\n\nmodule.exports = Dumper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}